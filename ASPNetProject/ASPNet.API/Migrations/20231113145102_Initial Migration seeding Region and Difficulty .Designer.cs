// <auto-generated />
using System;
using ASPNet.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASPNet.API.Migrations
{
    [DbContext(typeof(APSNetDbContext))]
    [Migration("20231113145102_Initial Migration seeding Region and Difficulty ")]
    partial class InitialMigrationseedingRegionandDifficulty
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ASPNet.API.Models.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("06c543cc-35ef-44ce-b07f-f51b67f9c268"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("c90f9516-7255-42ae-8071-8b8612125fff"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("9f96adeb-d150-4105-8dc1-07bf5693b397"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("ASPNet.API.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d740e5d9-6367-43ac-9031-4a3c0e5ab51b"),
                            Code = "UBA",
                            Name = "Uberaba",
                            RegionImageUrl = "www.imageofuberaba.com.br"
                        },
                        new
                        {
                            Id = new Guid("77a2669d-a009-495a-a413-a831f1538cd1"),
                            Code = "UDI",
                            Name = "Uberlândia",
                            RegionImageUrl = "www.imageofuberlândia.com.br"
                        },
                        new
                        {
                            Id = new Guid("d619892d-510f-4b7e-ba65-5de7ae9ec419"),
                            Code = "ITB",
                            Name = "Ituiutaba",
                            RegionImageUrl = "wwww.imageofituiutaba.com.br"
                        });
                });

            modelBuilder.Entity("ASPNet.API.Models.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalkImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("ASPNet.API.Models.Domain.Walk", b =>
                {
                    b.HasOne("ASPNet.API.Models.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASPNet.API.Models.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
